---
- name: Setup Docker
  hosts: all
  become: yes
  tasks:
    - name: Install Docker
      apt:
        update_cache: yes
        name: docker.io
        state: present
      tags: install
    - name: docker service is running
      service:
        name: docker
        state: started
        enabled: yes

- name: Run build process
  hosts: build_node
  become: yes
  tasks:
    - name: Pull maven image 
      docker_image:
        name: maven
        tag: latest
        state: present

    - name: Create build container to WAR
      docker_container:
        name: geoserver-build-container
        image: maven:latest
        state: started
        detach: true
        command: >
          /bin/bash -c "
          apt update && \
          apt install git -y && \
          git clone https://github.com/geoserver/geoserver.git /app && \
          cd /app/src && \
          mvn clean package -DskipTests"

    - name: Fetch logs from build container
      command:
        cmd: docker logs geoserver-build-container
      register: build_logs

    - name: Debug build logs
      debug:
        var: build_logs.stdout

    - name: Check WAR file exists in container
      command:
        cmd: docker exec geoserver-build-container ls /app/src/web/app/target/geoserver.war
      register: war_check
      failed_when: "'No such file or directory' in war_check.stderr"   

    - name: Copy WAR file from container 
      command:
        cmd: docker cp geoserver-build-container:/app/src/web/app/target/geoserver.war /tmp/geoserver.war

    - name: Remove build container
      docker_container:
        name: geoserver-build-container
        state: absent
        force_kill: yes

    - name: Copy WAR to production node
      copy:
        src: /tmp/geoserver.war
        dest: /tmp/geoserver.war
      delegate_to: prod_node

- name: Run production
  hosts: prod_node
  become: yes
  tasks:
    - name: Pull tomcat image 
      docker_image:
        name: tomcat
        tag: latest
        state: present

    - name: Run production container
      docker_container:
        name: geo-container
        image: tomcat:latest
        state: started
        volumes:
          - "/tmp/geoserver.war:/usr/local/tomcat/webapps/geoserver.war"
        published_ports:
          - "8082:8080"

    - name: app is running
      uri:
        url: http://130.193.59.244:8082/geoserver
        status_code: 200
        validate_certs: no
      register: geo_server_status

    - name: debug app status
      debug:
        var: geo_server_status


